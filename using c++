// image_processing.cpp
#include <opencv2/opencv.hpp>
#include <iostream>

int main() {
    // Load image
    cv::Mat image = cv::imread("image.jpg");

    // Convert image to grayscale
    cv::Mat gray;
    cv::cvtColor(image, gray, cv::COLOR_BGR2GRAY);

    // Apply thresholding to segment objects
    cv::Mat thresholded;
    cv::threshold(gray, thresholded, 0, 255, cv::THRESH_BINARY_INV + cv::THRESH_OTSU);

    // Find contours of objects
    std::vector<std::vector<cv::Point>> contours;
    cv::findContours(thresholded, contours, cv::RETR_EXTERNAL, cv::CHAIN_APPROX_SIMPLE);

    // Draw contours on original image
    cv::Mat output = image.clone();
    cv::drawContours(output, contours, -1, cv::Scalar(0, 255, 0), 2);

    // Display output
    cv::imshow("Output", output);
    cv::waitKey(0);
    cv::destroyAllWindows();

    return 0;
}
